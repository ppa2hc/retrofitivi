1. Environment Setup on VMM Jetson Orin

mkdir ~/g6demo
cd ~/g6demo
sudo apt install python3-venv
python3 -m venv myenv
source myenv/bin/activate
pip install wheel
pip install kuksa-client==0.4.3

2. Sample code: Set VSS API

from kuksa_client.grpc import Datapoint
from kuksa_client.grpc import VSSClient
from kuksa_client.grpc import DataEntry
from kuksa_client.grpc import DataType
from kuksa_client.grpc import EntryUpdate
from kuksa_client.grpc import Field
from kuksa_client.grpc import Metadata

DIGITAL_AUTO_IP = '127.0.0.1'
VAPI_VSPEED = "Vehicle.Speed" ## Change with security API e.g., Vehicle.Security.IDPS.IncidentReport, remember to change DataType accordingly.

with VSSClient(DIGITAL_AUTO_IP, 55555) as client:
    new_speed = 70
    updates = (EntryUpdate(DataEntry(
    VAPI_VSPEED,
    value=Datapoint(value=new_speed),
    metadata=Metadata(data_type=DataType.FLOAT),
    ), (Field.VALUE,)),)
    client.set(updates=updates)

3. Sample code: Get VSS API

from kuksa_client.grpc import VSSClient

DIGITAL_AUTO_IP = '127.0.0.1'
VAPI_VSPEED = "Vehicle.Speed"

with VSSClient(DIGITAL_AUTO_IP, 55555) as client:
    current_values = client.get_current_values([
        VAPI_VSPEED,
    ])
    if current_values[VAPI_VSPEED] is not None:
        print(current_values[VAPI_VSPEED].value)

4. Sample code: Subscribe to VSS API

from kuksa_client.grpc import VSSClient

DIGITAL_AUTO_IP = '127.0.0.1'
VAPI_VSPEED = "Vehicle.Speed"

with VSSClient(DIGITAL_AUTO_IP, 55555) as client:
    for updates in client.subscribe_current_values([
        VAPI_VSPEED,
    ]):
        if updates[VAPI_VSPEED] is not None:
            print(updates[VAPI_VSPEED].value)
